{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A single BYOL DiscrimiNAT instance in High Availability but without Auto Scaling or Load Balancing",
  "Mappings": {
    "Region2AMI": {
      "af-south-1": {
        "x86": "ami-0d095aaa017c2ed86"
      },
      "ap-east-1": {
        "x86": "ami-0c0fb03e64a1f059d"
      },
      "ap-northeast-1": {
        "x86": "ami-03cd1fb9d88fbcff0"
      },
      "ap-northeast-2": {
        "x86": "ami-0a434639443b36048"
      },
      "ap-northeast-3": {
        "x86": "ami-031317b897fbe56df"
      },
      "ap-south-1": {
        "x86": "ami-06aec00d715e3bd54"
      },
      "ap-south-2": {
        "x86": "ami-0939823a8513afcbd"
      },
      "ap-southeast-1": {
        "x86": "ami-051c2a201b50dede3"
      },
      "ap-southeast-2": {
        "x86": "ami-0141bad4be34de509"
      },
      "ap-southeast-3": {
        "x86": "ami-06e65e0093d7b5c26"
      },
      "ap-southeast-4": {
        "x86": "ami-0a8b00f904817d6b3"
      },
      "ca-central-1": {
        "x86": "ami-06776917084bc7a6e"
      },
      "ca-west-1": {
        "x86": "ami-0dee6496e37705bbe"
      },
      "eu-central-1": {
        "x86": "ami-0e48c8b42690ba56d"
      },
      "eu-central-2": {
        "x86": "ami-01f1145ac811bbff7"
      },
      "eu-north-1": {
        "x86": "ami-01894fb6818f065d3"
      },
      "eu-south-1": {
        "x86": "ami-080f12992866cc368"
      },
      "eu-south-2": {
        "x86": "ami-028cc168ae975da37"
      },
      "eu-west-1": {
        "x86": "ami-0bf90527104628d56"
      },
      "eu-west-2": {
        "x86": "ami-009ef6a31ddf6b6c1"
      },
      "eu-west-3": {
        "x86": "ami-0825891460d93999d"
      },
      "il-central-1": {
        "x86": "ami-0dfab9b6285dc11d6"
      },
      "me-central-1": {
        "x86": "ami-0ff5c51266bbd8f22"
      },
      "me-south-1": {
        "x86": "ami-02fe189fd1f551e3b"
      },
      "sa-east-1": {
        "x86": "ami-08a774c3abbdcb92e"
      },
      "us-east-1": {
        "x86": "ami-04d27750d864ca60a"
      },
      "us-east-2": {
        "x86": "ami-0d533daa87f328124"
      },
      "us-west-1": {
        "x86": "ami-0e4c68e3a01ad6b97"
      },
      "us-west-2": {
        "x86": "ami-020f26013e5c88135"
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "REQUIRED"
          },
          "Parameters": [
            "BYOL"
          ]
        },
        {
          "Label": {
            "default": "OPTIONAL Example VPC Network Configuration"
          },
          "Parameters": [
            "VpcCidr",
            "PrivateSubnet",
            "PublicSubnet"
          ]
        },
        {
          "Label": {
            "default": "OPTIONAL DiscrimiNAT Advanced Configuration"
          },
          "Parameters": [
            "InstanceType"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BYOL": {
      "Description": "Supply the licence key as supplied by Chaser Systems here.",
      "MinLength": 1,
      "NoEcho": true,
      "Type": "String"
    },
    "InstanceType": {
      "AllowedValues": [
        "t3.small",
        "c6i.large",
        "c6i.xlarge",
        "c6a.large",
        "c6a.xlarge"
      ],
      "Default": "t3.small",
      "Description": "The default of `t3.small` should suffice for light to medium levels of usage. Anything less than 2 CPU cores and 2 GB of RAM is not recommended. For performance testing, faster access to the Internet or for accounts with a large number of VMs (ENIs, rather), you may want to choose a machine type with dedicated CPU cores. Valid values are `t3.small` , `c6i.large` , `c6i.xlarge` , `c6a.large` , `c6a.xlarge` .",
      "Type": "String"
    },
    "PrivateSubnet": {
      "AllowedPattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
      "ConstraintDescription": "Must be in CIDR Notation, for example 10.0.0.0/16, 172.16.0.0/16, 192.168.0.0/24",
      "Default": "10.10.0.0/23",
      "Description": "The Private Subnet. If going with the example layout, try 10.10.0.0/23 .",
      "Type": "String"
    },
    "PublicSubnet": {
      "AllowedPattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
      "ConstraintDescription": "Must be in CIDR Notation, for example 10.0.0.0/16, 172.16.0.0/16, 192.168.0.0/24",
      "Default": "10.10.6.0/25",
      "Description": "The Public Subnet. If going with the example layout, try 10.10.6.0/25 .",
      "Type": "String"
    },
    "VpcCidr": {
      "AllowedPattern": "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\/\\d{1,2}$",
      "ConstraintDescription": "Must be in CIDR Notation, for example 10.0.0.0/16, 172.16.0.0/16, 192.168.0.0/24",
      "Default": "10.10.0.0/21",
      "Description": "The VPC-level CIDR block to deploy in this region. If going with the example layout, try 10.10.0.0/21 .",
      "Type": "String"
    }
  },
  "Resources": {
    "DiscrimiNATAutoScalingGroup": {
      "Properties": {
        "AutoScalingGroupName": {
          "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
        },
        "AvailabilityZones": [
          {
            "Fn::Select": [
              "0",
              {
                "Fn::GetAZs": {
                  "Ref": "AWS::Region"
                }
              }
            ]
          }
        ],
        "Cooldown": "1",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": 0,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "DiscrimiNATLaunchTemplate"
          },
          "Version": {
            "Fn::GetAtt": [
              "DiscrimiNATLaunchTemplate",
              "LatestVersionNumber"
            ]
          }
        },
        "MaxSize": "1",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": {
              "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
            }
          }
        ],
        "TerminationPolicies": [
          "OldestInstance"
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup"
    },
    "DiscrimiNATIAMInstanceProfile": {
      "Properties": {
        "InstanceProfileName": {
          "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
        },
        "Roles": [
          {
            "Ref": "DiscrimiNATIAMRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "DiscrimiNATIAMPolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:log-group:DiscrimiNAT:log-stream:*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ssm:GetParameter"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ssm:*:*:parameter/DiscrimiNAT*"
              ]
            },
            {
              "Action": [
                "ec2:ModifyInstanceAttribute",
                "ec2:AssociateAddress"
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/discriminat": false
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "autoscaling:SetInstanceHealth",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "arn:aws:autoscaling:*:*:autoScalingGroup:*:autoScalingGroupName/DiscrimiNAT-${AWS::StackName}"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": {
          "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
        },
        "Roles": [
          {
            "Ref": "DiscrimiNATIAMRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },
    "DiscrimiNATIAMRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": {
          "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "DiscrimiNATLaunchTemplate": {
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "Encrypted": true,
                "Iops": 3000,
                "VolumeSize": "25",
                "VolumeType": "gp3"
              }
            }
          ],
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "DiscrimiNATIAMInstanceProfile",
                "Arn"
              ]
            }
          },
          "ImageId": {
            "Fn::FindInMap": [
              "Region2AMI",
              {
                "Ref": "AWS::Region"
              },
              "x86"
            ]
          },
          "InstanceType": {
            "Ref": "InstanceType"
          },
          "MetadataOptions": {
            "HttpEndpoint": "enabled",
            "HttpTokens": "required"
          },
          "Monitoring": {
            "Enabled": true
          },
          "NetworkInterfaces": [
            {
              "DeviceIndex": "0",
              "NetworkInterfaceId": {
                "Ref": "DiscrimiNATNetworkInterface"
              }
            }
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "discriminat",
                  "Value": "self-manage"
                }
              ]
            }
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Sub": "#cloud-config\nwrite_files:\n- encoding: base64\n  path: /etc/chaser/licence-key.der\n  permissions: 0404\n  content: ${BYOL}\n"
            }
          }
        },
        "LaunchTemplateName": {
          "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
        }
      },
      "Type": "AWS::EC2::LaunchTemplate"
    },
    "DiscrimiNATNetworkInterface": {
      "Properties": {
        "GroupSet": [
          {
            "Ref": "DiscrimiNATSecurityGroup"
          }
        ],
        "SourceDestCheck": false,
        "SubnetId": {
          "Ref": "SubnetPublic"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
            }
          }
        ]
      },
      "Type": "AWS::EC2::NetworkInterface"
    },
    "DiscrimiNATPreferences": {
      "Properties": {
        "Name": "DiscrimiNAT",
        "Tier": "Standard",
        "Type": "String",
        "Value": "{\n  \"%default\": {\n    \"wildcard_exposure\": \"prohibit_public_suffix\",\n    \"flow_log_verbosity\": \"full\",\n    \"see_thru\": null,\n    \"x509_crls\": \"ignore\"\n  }\n}\n"
      },
      "Type": "AWS::SSM::Parameter"
    },
    "DiscrimiNATRouteAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        },
        "SubnetId": {
          "Ref": "SubnetPrivate"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "DiscrimiNATSecurityGroup": {
      "Properties": {
        "GroupDescription": "for DiscrimiNAT itself only",
        "GroupName": {
          "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
        },
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "DiscrimiNAT Firewall itself to internet forwarding on behalf of other hosts",
            "FromPort": 0,
            "IpProtocol": "-1",
            "ToPort": 0
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "VpcCidr"
            },
            "Description": "internet-bound TCP connections from any host in the VPC",
            "FromPort": 0,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "DiscrimiNAT-${AWS::StackName}"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "EIP": {
      "Properties": {
        "Tags": [
          {
            "Key": "discriminat",
            "Value": "some-comment"
          },
          {
            "Key": "Name",
            "Value": "egress-ip-reserved"
          }
        ]
      },
      "Type": "AWS::EC2::EIP"
    },
    "ElasticIPAssociation": {
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EIP",
            "AllocationId"
          ]
        },
        "NetworkInterfaceId": {
          "Ref": "DiscrimiNATNetworkInterface"
        }
      },
      "Type": "AWS::EC2::EIPAssociation"
    },
    "InternetGateway": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "InternetGateway-${AWS::StackName}"
            }
          }
        ]
      },
      "Type": "AWS::EC2::InternetGateway"
    },
    "InternetGatewayAttachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "InternetGatewayRouteAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "SubnetPublic"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "PrivateRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Private-${AWS::StackName}"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "PrivateSubnetDefaultRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NetworkInterfaceId": {
          "Ref": "DiscrimiNATNetworkInterface"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "PublicRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "PublicRouteTable": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Public-${AWS::StackName}"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "SubnetPrivate": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnet"
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Private-${AWS::StackName}"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "SubnetPublic": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnet"
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "Public-${AWS::StackName}"
            }
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "VPC": {
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCidr"
        },
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "VPC-${AWS::StackName}"
            }
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    }
  }
}
